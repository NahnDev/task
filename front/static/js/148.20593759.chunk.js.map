{"version":3,"file":"static/js/148.20593759.chunk.js","mappings":"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","sources":["api/userApi.ts","components/Header/components/User/index.tsx","components/Header/index.tsx","components/ModalCustom/index.tsx","components/Search/index.tsx","features/Home/components/Description/index.tsx","features/Home/components/FormProject/index.tsx","features/Home/components/Priorities/Task/index.tsx","features/Home/components/Priorities/index.tsx","features/Home/components/Projects/ProjectDetail/index.tsx","features/Home/components/Projects/index.tsx","features/Home/index.tsx"],"sourcesContent":["import { Form } from '../types/auth'\nimport { User } from '../types/global'\nimport axiosClient from './axiosClient'\n\nconst userApi = {\n    getUser: (mail: string) => {\n        const url = `/user?search=${mail}`\n        return axiosClient.get<any, Array<User>>(url)\n    },\n\n    getUserDetail: (_id: string) => {\n        const url = `/user/${_id}`\n        return axiosClient.get(url)\n    },\n\n    postUser: (data: Form) => {\n        const url = '/user'\n        return axiosClient.post(url, data)\n    },\n\n    patchUser: (_id: string, data: Form) => {\n        const url = `/user/${_id}`\n        return axiosClient.patch(url, data)\n    },\n\n    deleteUser: (_id: string) => {\n        const url = `/user/${_id}`\n        return axiosClient.delete(url)\n    },\n}\nexport default userApi\n","import { Avatar, Col, Dropdown, Menu, Row } from 'antd'\nimport { User } from '../../../../types/global'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { randomColorAvatar } from '../../../../functions/global'\n\ntype IProps = {\n    className: string\n    user: User\n}\n\nconst menu = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n                3rd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n)\n\nfunction UserDetail(props: IProps) {\n    const name = props.user.name\n\n    return (\n        <Row align=\"middle\">\n            <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n                <button className={`${props.className}--btn`}>\n                    <PlusOutlined />\n                </button>\n            </Dropdown>\n            <Col className={`${props.className}--name`}>\n                <span>{props.user.name}</span>\n            </Col>\n            <Dropdown\n                overlay={menu}\n                placement=\"bottomRight\"\n                arrow\n                className={`${props.className}--avatar`}\n            >\n                <Avatar style={{ backgroundColor: randomColorAvatar(props.user._id) }}>\n                    {name?.slice(name?.indexOf(' ') + 1, name?.indexOf(' ') + 2)}\n                </Avatar>\n            </Dropdown>\n        </Row>\n    )\n}\n\nexport default UserDetail\n","import { Col, Dropdown, Menu, Row } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport userApi from '../../api/userApi'\nimport { setUser } from '../../app/userSlice'\nimport { classComponent } from '../../constants/className'\nimport { User } from '../../types/global'\nimport Search from '../Search'\nimport UserDetail from './components/User'\nimport { DownOutlined } from '@ant-design/icons'\n\nimport './Header.scss'\nimport { NavLink } from 'react-router-dom'\nimport { CONTENT_COMPONENT } from '../../constants/global'\n\nconst content = CONTENT_COMPONENT.header\n\ntype TProps = {\n    className: string\n    title?: string\n    dropdown?: any\n    actionDropdown?: Function\n    navigate?: Array<any>\n}\n\nconst menu = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n                3rd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n)\n\nconst className = classComponent.header\n\nfunction Header(props: TProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const dispatch = useDispatch()\n\n    const menuDropdown = (\n        <Menu\n            onClick={(value) => {\n                if (props.actionDropdown) props.actionDropdown(value.key)\n            }}\n        >\n            {content.menuDropdown.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const getUser = async (_id: string) => {\n        try {\n            const response: any = await userApi.getUserDetail(_id)\n            dispatch(setUser(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getUser(user._id)\n    }, [user.name !== undefined])\n\n    return (\n        <Row align=\"middle\" justify=\"space-between\" className={`${className} ${props.className}`}>\n            <Col>\n                <Row>\n                    {props.dropdown ? (\n                        <span className={`${className}__title`}>\n                            {props.dropdown}\n\n                            <Dropdown overlay={menuDropdown} placement=\"bottomRight\" arrow>\n                                <button className={`${className}__title--icon`}>\n                                    <DownOutlined />\n                                </button>\n                            </Dropdown>\n                        </span>\n                    ) : (\n                        <span className={`${className}__title`}>{props.title}</span>\n                    )}\n                </Row>\n                {props.navigate && props.navigate.length && (\n                    <Row className={`${className}__navigate`}>\n                        {props.navigate.map((value, index) => {\n                            return (\n                                <Col key={`header-navigate-${index} `}>\n                                    <NavLink\n                                        to={value.path}\n                                        className={({ isActive }) =>\n                                            isActive\n                                                ? `${className}__navigate--link active`\n                                                : `${className}__navigate--link`\n                                        }\n                                    >\n                                        {value.text}\n                                    </NavLink>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                )}\n            </Col>\n            <Col>\n                <Row align=\"middle\">\n                    <Col className={`${className}__search`}>\n                        <Search onSearch={(value: any) => console.log(value)} />\n                    </Col>\n                    <Col>\n                        <UserDetail user={user} className={`${className}__detail`} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Header\n","import { Modal, Spin } from 'antd'\nimport { useEffect } from 'react'\n\nimport './ModalCustom.scss'\n\ntype IProps = {\n    visible: boolean\n    loading?: boolean\n\n    closeModal: Function\n    title: string\n\n    contentModal: any\n}\n\nfunction ModalCustom(props: IProps) {\n    useEffect(() => {}, [props.visible])\n\n    return (\n        <Modal\n            title={props.title}\n            visible={props.visible}\n            onOk={() => props.closeModal(false)}\n            onCancel={() => props.closeModal(false)}\n            footer={null}\n            width={600}\n        >\n            <Spin spinning={props.loading}>{props.contentModal}</Spin>\n        </Modal>\n    )\n}\n\nexport default ModalCustom\n","import { Row } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport { classComponent } from '../../constants/className'\n\nimport './Search.scss'\nimport { useState } from 'react'\n\ntype IProps = {\n    onSearch: Function\n}\n\nconst className = classComponent.search\n\nfunction Search(props: IProps) {\n    const [value, setValue] = useState<string>('')\n    return (\n        <Row className={`${className}`} align=\"middle\">\n            <span className={`${className}__icon`}>\n                <SearchOutlined />\n            </span>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                className={`${className}__input`}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                        setValue('')\n                        props.onSearch(value)\n                    }\n                }}\n                onBlur={() => {\n                    setValue('')\n                    props.onSearch(value)\n                }}\n            />\n        </Row>\n    )\n}\n\nexport default Search\n","import { Col, Row } from 'antd'\nimport moment from 'moment'\nimport { useSelector } from 'react-redux'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport { Project, User } from '../../../../types/global'\n\ntype IProps = {\n    className: string\n}\n\nconst content = CONTENT_HOME.descriptionContent\n\nfunction Description(props: IProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const projects: Array<Project> = useSelector((state: any) => state.projects) || []\n\n    const now = moment().format('dddd, MMMM Do')\n\n    return (\n        <>\n            <Row justify=\"center\" align=\"middle\">\n                <Col xs={12} className={`${props.className}`}>\n                    <span className={`${props.className}--text`}>{now}</span>\n                    <span\n                        className={`${props.className}--text`}\n                    >{`${content.textDesc} ${user.name}`}</span>\n                </Col>\n            </Row>\n            <Row justify=\"center\" align=\"middle\">\n                <Col xs={10} className={`${props.className}--box`}>\n                    <Row justify=\"center\" align=\"middle\">\n                        <Col xs={12} className={`${props.className}--desc`}>\n                            <content.iconTask /> {`0 ${content.textTask}`}\n                        </Col>\n                        <Col xs={12} className={`${props.className}--desc`}>\n                            <content.iconProject /> {`${projects.length} ${content.textProjects}`}\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Description\n","import { FastField, Form } from 'formik'\nimport { classHome } from '../../../../constants/className'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport InputField from '../../../../custom-fields/InputField'\n\nimport { HandleForm } from '../../../../types/auth'\n\nconst content = CONTENT_HOME.formProject\n\nfunction FormProject(props: HandleForm) {\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classHome.form}--field`}\n                label={content.fieldsName.label}\n            />\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classHome.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormProject\n","import { Row } from 'antd'\nimport { CONTENT_HOME } from '../../../../../constants/global'\n\ntype IProps = {\n    className: string\n    value: any\n}\n\nconst content = CONTENT_HOME.priorities.iconStatus\n\nfunction Task(props: IProps) {\n    return (\n        <Row align=\"middle\" className={props.className}>\n            {content.map((value, index) => {\n                if (value.value === props.value.status)\n                    return (\n                        <span key={`task-icon-${index}`} className={`${props.className}-icon`}>\n                            <value.icon key={`icon-${index}`} />\n                        </span>\n                    )\n            })}\n            <span className={`${props.className}-text`}>{`${props.value.name}`}</span>\n        </Row>\n    )\n}\n\nexport default Task\n","import { Col, Row } from 'antd'\nimport { useState } from 'react'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport Task from './Task'\n\ntype IProps = {\n    className: string\n    listTask: Array<any>\n}\n\nconst content = CONTENT_HOME.priorities\n\nfunction Priorities(props: IProps) {\n    const [filter, setFilter] = useState<string>('doing')\n\n    return (\n        <Row className={`${props.className}`}>\n            <Col xs={24}>\n                <Row align=\"middle\" className={`${props.className}--title`}>\n                    <span>{content.title}</span>\n                </Row>\n                <Row align=\"middle\" className={`${props.className}--navigate`}>\n                    {content.navigate &&\n                        content.navigate.length &&\n                        content.navigate.map((value, index) => {\n                            return (\n                                <Col\n                                    key={`priorities-nav-${index}`}\n                                    className={\n                                        filter === value.value\n                                            ? `${props.className}--navigate-item active`\n                                            : `${props.className}--navigate-item`\n                                    }\n                                    onClick={() => setFilter(value.value)}\n                                >\n                                    {value.text}\n                                </Col>\n                            )\n                        })}\n                </Row>\n                <Row className={`${props.className}--tasks`}>\n                    <Col xs={24}>\n                        <Row align=\"middle\" className={`${props.className}--task`}>\n                            <span className={`${props.className}--task-icon`}>\n                                <content.iconAddTask />\n                            </span>\n                            <span className={`${props.className}--task-text`}>\n                                {content.textAddTask}\n                            </span>\n                        </Row>\n                        {props.listTask.map((value, index) => {\n                            return (\n                                <Task\n                                    key={`task-${index}`}\n                                    className={`${props.className}--task`}\n                                    value={value}\n                                />\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Priorities\n","import { Avatar, Col, Row } from 'antd'\nimport { CONTENT_HOME } from '../../../../../constants/global'\nimport { Project } from '../../../../../types/global'\nimport { NavLink } from 'react-router-dom'\nimport { randomColorAvatar } from '../../../../../functions/global'\n\ntype IProps = {\n    className: string\n    value: Project\n}\n\nconst content = CONTENT_HOME.projects.project\n\nfunction ProjectDetail(props: IProps) {\n    return (\n        <Col xs={12}>\n            <NavLink to={`/project/${props.value._id}`}>\n                <Row align=\"middle\" className={`${props.className}`}>\n                    <Col xs={7} className={`${props.className}-avatar`}>\n                        <Avatar\n                            shape=\"square\"\n                            size={55}\n                            style={{\n                                backgroundColor: randomColorAvatar(props.value._id),\n                                borderRadius: 15,\n                            }}\n                        >\n                            {props.value.name?.slice(0, 1)}\n                        </Avatar>\n                    </Col>\n                    <Col xs={17}>\n                        <Row className={`${props.className}-name`}>\n                            <span>{props.value.name}</span>\n                        </Row>\n                        <Row className={`${props.className}-member`}>\n                            <Avatar.Group maxCount={3} size=\"small\">\n                                {props.value.members.map((value, index) => {\n                                    return (\n                                        <Avatar\n                                            key={`avatar-mem-project-${index}`}\n                                            style={{\n                                                backgroundColor: randomColorAvatar(value.user._id),\n                                            }}\n                                        >\n                                            {value.user.name?.slice(\n                                                value.user.name?.indexOf(' ') + 1,\n                                                value.user.name?.indexOf(' ') + 2\n                                            )}\n                                        </Avatar>\n                                    )\n                                })}\n                            </Avatar.Group>\n                        </Row>\n                    </Col>\n                </Row>\n            </NavLink>\n        </Col>\n    )\n}\n\nexport default ProjectDetail\n","import { Col, Row } from 'antd'\nimport { useSelector } from 'react-redux'\nimport { CONTENT_HOME } from '../../../../constants/global'\nimport { Project } from '../../../../types/global'\nimport ProjectDetail from './ProjectDetail'\n\ntype IProps = {\n    className: string\n    onClickAddProject: Function\n}\n\nconst content = CONTENT_HOME.projects\n\nfunction Projects(props: IProps) {\n    const projects: Array<Project> = useSelector((state: any) => state.projects) || []\n\n    return (\n        <Row className={`${props.className}`}>\n            <Col xs={24}>\n                <Row align=\"middle\" className={`${props.className}--title`}>\n                    <span>{content.title}</span>\n                </Row>\n                <Row\n                    align=\"middle\"\n                    className={`${props.className}--btn`}\n                    onClick={() => props.onClickAddProject()}\n                >\n                    <span className={`${props.className}--btn-icon`}>\n                        <content.iconAddProject />\n                    </span>\n                    <span className={`${props.className}--btn-text`}>{content.textAddProject}</span>\n                </Row>\n                <Row align=\"top\" className={`${props.className}--projects`}>\n                    {projects &&\n                        projects.length > 0 &&\n                        projects.map((value, index) => {\n                            return (\n                                <ProjectDetail\n                                    key={`project-${index}`}\n                                    className={`${props.className}--project`}\n                                    value={value}\n                                />\n                            )\n                        })}\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Projects\n","import { Col, Row } from 'antd';\nimport { Formik } from 'formik';\nimport { useState, useEffect } from 'react';\nimport projectApi from '../../api/projectsApi';\n\nimport { useNavigate } from 'react-router-dom'\n\nimport Header from '../../components/Header'\nimport ModalCustom from '../../components/ModalCustom'\nimport { classHome, classLayout } from '../../constants/className'\nimport { CONTENT_HOME } from '../../constants/global'\nimport { initialValuesFormHomeProject } from '../../constants/initialValues'\nimport { validateFormHomeProject } from '../../constants/validate'\nimport { openNotificationWithIcon } from '../../functions/global'\nimport { DataProject } from '../../types/api'\nimport Description from './components/Description'\nimport FormProject from './components/FormProject'\nimport Priorities from './components/Priorities'\nimport Projects from './components/Projects'\n\nimport './Home.scss'\nimport { useDispatch } from 'react-redux'\nimport { add, list } from '../../app/projectsSlice'\nimport { Project } from '../../types/global';\n\ntype Home = {\n    className: string;\n};\n\nconst content = CONTENT_HOME;\nconst className = classHome.home;\n\nfunction Home(props: Home) {\n    const [projects, setProjects] = useState<Array<Project>>([]);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const nav = useNavigate()\n    const dispatch = useDispatch()\n\n    const getProjects = async () => {\n        try {\n            const response = await projectApi.getProjects();\n            setProjects(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const postProjects = async (formData: DataProject) => {\n        try {\n            setLoading(true);\n            const response = await projectApi.postProjects(formData);\n            if (response) {\n                setLoading(false);\n                setVisible(false);\n                getProjects();\n                openNotificationWithIcon('success', 'Create project successfully!', '');\n            }\n\n            console.log(response);\n        } catch (error: any) {\n            console.log(error);\n        }\n    };\n\n    const handleSubmit = (value: DataProject) => postProjects(value);\n\n    const contentModal = (\n        <Formik\n            initialValues={initialValuesFormHomeProject}\n            validationSchema={validateFormHomeProject}\n            onSubmit={handleSubmit}\n            render={FormProject}\n        />\n    );\n\n    useEffect(() => {\n        getProjects();\n    }, [projects !== null]);\n    return (\n        <Row className={`${props.className} ${className}`}>\n            <Col xs={24}>\n                <Header className={classLayout.header} title={content.title} />\n                <Description className={`${className}__desc`} />\n                <Row justify=\"center\">\n                    <Col xs={12}>\n                        <Priorities\n                            className={`${className}__priorities`}\n                            listTask={[\n                                { name: 'test task 1', status: 'doing' },\n                                { name: 'test task 2', status: 'completed' },\n                                { name: 'test task 3', status: 'overdue' },\n                            ]}\n                        />\n                    </Col>\n                    <Col xs={12}>\n                        <Projects\n                            onClickAddProject={() => setVisible(!visible)}\n                            className={`${className}__project`}\n                        />\n                    </Col>\n                </Row>\n                <ModalCustom\n                    loading={loading}\n                    contentModal={contentModal}\n                    visible={visible}\n                    closeModal={(value: boolean) => setVisible(value)}\n                    title={content.formProject.title}\n                />\n            </Col>\n        </Row>\n    );\n}\n\nexport default Home;\n"],"names":["userApi","getUser","mail","url","axiosClient","getUserDetail","_id","postUser","data","patchUser","deleteUser","menu","target","rel","href","props","name","user","align","overlay","placement","arrow","className","PlusOutlined","style","backgroundColor","randomColorAvatar","slice","indexOf","content","CONTENT_COMPONENT","classComponent","useSelector","state","dispatch","useDispatch","menuDropdown","onClick","value","actionDropdown","key","map","icon","text","response","setUser","console","log","useEffect","undefined","justify","dropdown","DownOutlined","title","navigate","length","index","to","path","isActive","Search","onSearch","User","visible","onOk","closeModal","onCancel","footer","width","spinning","loading","contentModal","useState","setValue","SearchOutlined","type","placeholder","onChange","e","onKeyPress","onBlur","CONTENT_HOME","projects","now","moment","format","xs","textDesc","iconTask","textTask","iconProject","textProjects","onSubmit","handleSubmit","component","InputField","fieldsName","classHome","label","btnSubmit","status","filter","setFilter","iconAddTask","textAddTask","listTask","shape","size","borderRadius","maxCount","members","onClickAddProject","iconAddProject","textAddProject","setProjects","setVisible","setLoading","getProjects","useNavigate","projectApi","postProjects","formData","openNotificationWithIcon","initialValues","initialValuesFormHomeProject","validationSchema","validateFormHomeProject","render","FormProject","Header","classLayout","ModalCustom","formProject"],"sourceRoot":""}