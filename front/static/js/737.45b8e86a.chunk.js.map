{"version":3,"file":"static/js/737.45b8e86a.chunk.js","mappings":"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","sources":["api/userApi.ts","components/Header/components/User/index.tsx","components/Header/index.tsx","components/ModalCustom/index.tsx","components/Search/index.tsx","components/DrawerCustom/index.tsx","features/Project/components/FormMember/index.tsx","features/Project/components/FormRoles/InputName/index.tsx","features/Project/components/FormRoles/Roles/index.tsx","features/Project/components/FormRoles/SelectPermission/index.tsx","features/Project/components/FormRoles/index.tsx","custom-fields/DateField/index.tsx","custom-fields/SelectField/index.tsx","features/Project/components/FormTask/index.tsx","features/Project/components/TaskDetail/DateTask/index.tsx","features/Project/components/TaskDetail/Header/index.tsx","features/Project/components/TaskDetail/SelectTask/index.tsx","features/Project/components/FormSubTask/index.tsx","features/Project/components/TaskDetail/SubTask/index.tsx","features/Project/components/TaskDetail/TextAreaTask/index.tsx","features/Project/components/TaskDetail/index.tsx","features/Project/components/Tasks/index.tsx","features/Project/index.tsx"],"sourcesContent":["import { Form } from '../types/auth'\nimport { User } from '../types/global'\nimport axiosClient from './axiosClient'\n\nconst userApi = {\n    getUser: (mail: string) => {\n        const url = `/user?search=${mail}`\n        return axiosClient.get<any, Array<User>>(url)\n    },\n\n    getUserDetail: (_id: string) => {\n        const url = `/user/${_id}`\n        return axiosClient.get(url)\n    },\n\n    postUser: (data: Form) => {\n        const url = '/user'\n        return axiosClient.post(url, data)\n    },\n\n    patchUser: (_id: string, data: Form) => {\n        const url = `/user/${_id}`\n        return axiosClient.patch(url, data)\n    },\n\n    deleteUser: (_id: string) => {\n        const url = `/user/${_id}`\n        return axiosClient.delete(url)\n    },\n}\nexport default userApi\n","import { Avatar, Col, Dropdown, Menu, Row } from 'antd'\nimport { User } from '../../../../types/global'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { randomColorAvatar } from '../../../../functions/global'\n\ntype IProps = {\n    className: string\n    user: User\n}\n\nconst menu = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n                3rd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n)\n\nfunction UserDetail(props: IProps) {\n    const name = props.user.name\n\n    return (\n        <Row align=\"middle\">\n            <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\n                <button className={`${props.className}--btn`}>\n                    <PlusOutlined />\n                </button>\n            </Dropdown>\n            <Col className={`${props.className}--name`}>\n                <span>{props.user.name}</span>\n            </Col>\n            <Dropdown\n                overlay={menu}\n                placement=\"bottomRight\"\n                arrow\n                className={`${props.className}--avatar`}\n            >\n                <Avatar style={{ backgroundColor: randomColorAvatar(props.user._id) }}>\n                    {name?.slice(name?.indexOf(' ') + 1, name?.indexOf(' ') + 2)}\n                </Avatar>\n            </Dropdown>\n        </Row>\n    )\n}\n\nexport default UserDetail\n","import { Col, Dropdown, Menu, Row } from 'antd'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport userApi from '../../api/userApi'\nimport { setUser } from '../../app/userSlice'\nimport { classComponent } from '../../constants/className'\nimport { User } from '../../types/global'\nimport Search from '../Search'\nimport UserDetail from './components/User'\nimport { DownOutlined } from '@ant-design/icons'\n\nimport './Header.scss'\nimport { NavLink } from 'react-router-dom'\nimport { CONTENT_COMPONENT } from '../../constants/global'\n\nconst content = CONTENT_COMPONENT.header\n\ntype TProps = {\n    className: string\n    title?: string\n    dropdown?: any\n    actionDropdown?: Function\n    navigate?: Array<any>\n}\n\nconst menu = (\n    <Menu>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n                1st menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n                2nd menu item\n            </a>\n        </Menu.Item>\n        <Menu.Item>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n                3rd menu item\n            </a>\n        </Menu.Item>\n    </Menu>\n)\n\nconst className = classComponent.header\n\nfunction Header(props: TProps) {\n    const user: User = useSelector((state: any) => state.user)\n    const dispatch = useDispatch()\n\n    const menuDropdown = (\n        <Menu\n            onClick={(value) => {\n                if (props.actionDropdown) props.actionDropdown(value.key)\n            }}\n        >\n            {content.menuDropdown.map((value) => {\n                return (\n                    <Menu.Item key={value.key}>\n                        <value.icon /> {value.text}\n                    </Menu.Item>\n                )\n            })}\n        </Menu>\n    )\n\n    const getUser = async (_id: string) => {\n        try {\n            const response: any = await userApi.getUserDetail(_id)\n            dispatch(setUser(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getUser(user._id)\n    }, [user.name !== undefined])\n\n    return (\n        <Row align=\"middle\" justify=\"space-between\" className={`${className} ${props.className}`}>\n            <Col>\n                <Row>\n                    {props.dropdown ? (\n                        <span className={`${className}__title`}>\n                            {props.dropdown}\n\n                            <Dropdown overlay={menuDropdown} placement=\"bottomRight\" arrow>\n                                <button className={`${className}__title--icon`}>\n                                    <DownOutlined />\n                                </button>\n                            </Dropdown>\n                        </span>\n                    ) : (\n                        <span className={`${className}__title`}>{props.title}</span>\n                    )}\n                </Row>\n                {props.navigate && props.navigate.length && (\n                    <Row className={`${className}__navigate`}>\n                        {props.navigate.map((value, index) => {\n                            return (\n                                <Col key={`header-navigate-${index} `}>\n                                    <NavLink\n                                        to={value.path}\n                                        className={({ isActive }) =>\n                                            isActive\n                                                ? `${className}__navigate--link active`\n                                                : `${className}__navigate--link`\n                                        }\n                                    >\n                                        {value.text}\n                                    </NavLink>\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                )}\n            </Col>\n            <Col>\n                <Row align=\"middle\">\n                    <Col className={`${className}__search`}>\n                        <Search onSearch={(value: any) => console.log(value)} />\n                    </Col>\n                    <Col>\n                        <UserDetail user={user} className={`${className}__detail`} />\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Header\n","import { Modal, Spin } from 'antd'\nimport { useEffect } from 'react'\n\nimport './ModalCustom.scss'\n\ntype IProps = {\n    visible: boolean\n    loading?: boolean\n\n    closeModal: Function\n    title: string\n\n    contentModal: any\n}\n\nfunction ModalCustom(props: IProps) {\n    useEffect(() => {}, [props.visible])\n\n    return (\n        <Modal\n            title={props.title}\n            visible={props.visible}\n            onOk={() => props.closeModal(false)}\n            onCancel={() => props.closeModal(false)}\n            footer={null}\n            width={600}\n        >\n            <Spin spinning={props.loading}>{props.contentModal}</Spin>\n        </Modal>\n    )\n}\n\nexport default ModalCustom\n","import { Row } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport { classComponent } from '../../constants/className'\n\nimport './Search.scss'\nimport { useState } from 'react'\n\ntype IProps = {\n    onSearch: Function\n}\n\nconst className = classComponent.search\n\nfunction Search(props: IProps) {\n    const [value, setValue] = useState<string>('')\n    return (\n        <Row className={`${className}`} align=\"middle\">\n            <span className={`${className}__icon`}>\n                <SearchOutlined />\n            </span>\n            <input\n                type=\"text\"\n                placeholder=\"Search\"\n                className={`${className}__input`}\n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                        setValue('')\n                        props.onSearch(value)\n                    }\n                }}\n                onBlur={() => {\n                    setValue('')\n                    props.onSearch(value)\n                }}\n            />\n        </Row>\n    )\n}\n\nexport default Search\n","import { Drawer } from 'antd'\nimport { useEffect } from 'react'\n\nimport './DrawerCustom.scss'\n\ntype IProps = {\n    visible: boolean\n\n    closeModal: Function\n    title?: string\n\n    contentDrawer: any\n}\n\nfunction DrawerCustom(props: IProps) {\n    useEffect(() => {}, [props.visible])\n\n    return (\n        <Drawer\n            title={props.title || false}\n            placement=\"right\"\n            width={550}\n            onClose={() => props.closeModal()}\n            visible={props.visible}\n            getContainer={false}\n            closable={false}\n        >\n            {props.contentDrawer}\n        </Drawer>\n    )\n}\n\nexport default DrawerCustom\n","import { Avatar, Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport projectsApi from '../../../../api/projectsApi'\nimport userApi from '../../../../api/userApi'\nimport { addMember } from '../../../../app/projectSlice'\nimport Search from '../../../../components/Search'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { openNotificationWithIcon, randomColorAvatar } from '../../../../functions/global'\nimport { DataMembers } from '../../../../types/api'\nimport { Member, Project, User } from '../../../../types/global'\n\ntype IProps = {}\n\nconst content = CONTENT_PROJECT.formMember\nconst className = classProject.member\n\nfunction FormMember(props: IProps) {\n    const dispatch = useDispatch()\n    const project: Project = useSelector((state: any) => state.project)\n\n    const [userSearch, setUserSearch] = useState<Array<User>>()\n    const findUser = async (mail: string) => {\n        try {\n            const response: Array<User> = await userApi.getUser(mail)\n\n            if (response.length === 0) openNotificationWithIcon('warning', \"Can't find user!\", '')\n\n            setUserSearch(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postMember = async (pid: string, data: DataMembers) => {\n        try {\n            const response: Member = await projectsApi.postMembers(pid, data)\n            dispatch(addMember(response))\n            setUserSearch([])\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const handleSearch = (value: string) => {\n        value && findUser(value)\n    }\n\n    const handleAddMember = (value: any) => {\n        const data: DataMembers = {\n            user: value,\n        }\n\n        postMember(project._id, data)\n    }\n\n    return (\n        <Row>\n            <Col xs={12} className={`${className}-search`}>\n                <Search onSearch={handleSearch} />\n\n                {userSearch && userSearch.length > 0 && (\n                    <Row align=\"middle\" className={`${className}-item`}>\n                        <Col xs={6} className={`${className}-item--avatar`}>\n                            <Avatar\n                                shape=\"square\"\n                                size={55}\n                                style={{\n                                    backgroundColor: randomColorAvatar(userSearch[0]._id),\n                                    borderRadius: 15,\n                                }}\n                            >\n                                {userSearch[0].name?.slice(0, 1)}\n                            </Avatar>\n                        </Col>\n\n                        <Col xs={16} className={`${className}-item--desc`}>\n                            <span>{userSearch[0].name}</span>\n                            <span>{userSearch[0].email}</span>\n                        </Col>\n\n                        <Col xs={2}>\n                            <button\n                                onClick={() => handleAddMember(userSearch[0]._id)}\n                                className={`${className}-btn`}\n                            >\n                                <content.btnSubmit />\n                            </button>\n                        </Col>\n                    </Row>\n                )}\n            </Col>\n\n            <Col xs={12} className={`${className}-list`}>\n                {project.members.map((value, index) => {\n                    return (\n                        <Row\n                            align=\"middle\"\n                            className={`${className}-item`}\n                            key={`member-project-${index}`}\n                        >\n                            <Col xs={6} className={`${className}-item--avatar`}>\n                                <Avatar\n                                    shape=\"square\"\n                                    size={55}\n                                    style={{\n                                        backgroundColor: randomColorAvatar(value.user._id),\n                                        borderRadius: 15,\n                                    }}\n                                >\n                                    {value.user.name?.slice(0, 1)}\n                                </Avatar>\n                            </Col>\n\n                            <Col xs={16} className={`${className}-item--desc`}>\n                                <span>{value.user.name}</span>\n                                <span>{value.user.email}</span>\n                            </Col>\n\n                            <Col xs={2}>\n                                <button className={`${className}-item--btn`}>\n                                    <content.btnDelete />\n                                </button>\n                            </Col>\n                        </Row>\n                    )\n                })}\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormMember\n","import { Input, Row } from 'antd'\n\ntype IProps = {\n    className?: string\n    placeholder?: string\n    name?: string\n    label?: string\n    value: any\n\n    onChange: Function\n}\n\nfunction InputName(props: IProps) {\n    return (\n        <Row justify=\"center\" align=\"middle\" className={`${props.className}`}>\n            {props.label && (\n                <label htmlFor={props.name} className={`${props.className}--label`}>\n                    {props.label}\n                </label>\n            )}\n            <Input\n                name={props.name}\n                className={`${props.className}--input`}\n                placeholder={props.placeholder}\n                bordered={false}\n                value={props.value.name}\n                onChange={(e) => props.onChange(e.target.value)}\n            />\n        </Row>\n    )\n}\n\nexport default InputName\n","import { Col, Row, Tag } from 'antd'\nimport { Role } from '../../../../../types/global'\n\ntype IProps = {\n    className?: string\n    icon: any\n\n    roles: Array<Role>\n    handleDelete: Function\n}\n\nfunction Roles(props: IProps) {\n    return (\n        <>\n            <Row className={`${props.className}--title`}>\n                <span>Roles</span>\n            </Row>\n            <Row className={`${props.className}`}>\n                <Col xs={24}>\n                    {props.roles.map((value, index) => {\n                        return (\n                            <Row\n                                key={`role-${index}`}\n                                justify=\"space-between\"\n                                align=\"middle\"\n                                className={`${props.className}--item`}\n                            >\n                                <div className={`${props.className}--name`}>\n                                    <span>{value.name}</span>\n                                    <div>\n                                        {value.permission.length === 8 ? (\n                                            <Tag key={`tag-all`} color=\"lime\">\n                                                ALL\n                                            </Tag>\n                                        ) : (\n                                            value.permission.map((value, index) => {\n                                                return (\n                                                    <Tag key={`tag-${index}`} color=\"lime\">\n                                                        {value}\n                                                    </Tag>\n                                                )\n                                            })\n                                        )}\n                                    </div>\n                                </div>\n                                {!value.default && (\n                                    <button\n                                        className={`${props.className}--btn`}\n                                        onClick={() => props.handleDelete(value)}\n                                    >\n                                        <props.icon />\n                                    </button>\n                                )}\n                            </Row>\n                        )\n                    })}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Roles\n","import { Row, Select, Tag } from 'antd'\nimport { useState } from 'react'\nimport { randomColorAvatar } from '../../../../../functions/global'\n\ntype SelectPermissionProps = {\n    className?: string\n    label?: string\n    value: any\n\n    options: Array<{ _id: string; name: string }>\n    onChange: Function\n}\n\nconst { Option } = Select\n\nfunction SelectPermission(props: SelectPermissionProps) {\n    function tagRender(props: any) {\n        const { label, value, closable, onClose } = props\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={onClose}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <Select\n                mode={'tags'}\n                bordered={false}\n                className={`${props.className}--input`}\n                value={props.value.permission}\n                onChange={(val) => props.onChange(val)}\n                tagRender={tagRender}\n            >\n                {props.options.map((value: any) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Row>\n    )\n}\n\nexport default SelectPermission\n","import { Col, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../api/projectsApi'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { openNotificationWithIcon } from '../../../../functions/global'\nimport { Role } from '../../../../types/global'\nimport InputName from './InputName'\nimport Roles from './Roles'\nimport SelectPermission from './SelectPermission'\n\ntype IProps = {}\n\nconst content = CONTENT_PROJECT.formRoles\nconst className = classProject.roles\n\nfunction FormRoles(props: IProps) {\n    const params: any = useParams()\n\n    const [dataAddRole, setDataAddRole] = useState<any>({ name: '', permission: [] })\n    const [roles, setRoles] = useState<Array<Role>>([])\n\n    const getRoles = async (id: string) => {\n        try {\n            const response = await projectsApi.getRoles(id)\n            setRoles(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postRoles = async (id: string, data: any) => {\n        try {\n            const response = await projectsApi.postRoles(id, data)\n            console.log(response)\n\n            if (response) {\n                getRoles(id)\n                setDataAddRole({ name: '', permission: [] })\n                openNotificationWithIcon('success', 'Add role successfully!', '')\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const deleteRoles = async (pid: string, id: string) => {\n        try {\n            const response = await projectsApi.deleteRoles(pid, id)\n            getRoles(pid)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const handleSubmit = () => postRoles(params.id, dataAddRole)\n    const handleDelete = (value: Role) => {\n        deleteRoles(value.project || '', value._id || '')\n    }\n\n    useEffect(() => {\n        getRoles(params.id)\n    }, [params])\n\n    return (\n        <Row>\n            <Col xs={24}>\n                <InputName\n                    className={`${className}-field`}\n                    name={'name'}\n                    label={'Name Role *'}\n                    value={dataAddRole}\n                    onChange={(value: string) => setDataAddRole({ ...dataAddRole, name: value })}\n                />\n                <SelectPermission\n                    options={content.optionsPermission}\n                    className={`${className}-field`}\n                    label={'Permission'}\n                    value={dataAddRole}\n                    onChange={(value: any) => setDataAddRole({ ...dataAddRole, permission: value })}\n                />\n\n                <Row align={'middle'} justify={'center'} onClick={handleSubmit}>\n                    <button type={'submit'} className={`${className}-btn`}>\n                        {content.btnSubmit}\n                    </button>\n                </Row>\n            </Col>\n\n            <Col xs={24}>\n                <Roles\n                    className={`${className}-list`}\n                    roles={roles}\n                    icon={content.iconDeleteRole}\n                    handleDelete={handleDelete}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default FormRoles\n","import moment from 'moment'\n\nimport { DatePicker, Form } from 'antd'\n\nimport './DateField.scss'\n\ntype DateFieldProps = {\n    field: any\n    form: any\n\n    label: string\n    placeholder: string\n    disabled: boolean\n\n    className: string\n}\n\nfunction DateField(props: DateFieldProps) {\n    const { field, form, label, className } = props\n\n    const { name, value } = field\n    const { setFieldValue } = form\n\n    const valueFormat = moment(value)\n\n    const touched = form.touched[field.name]\n    const hasError = form.errors[field.name]\n    const submittedError = hasError\n    const touchedError = hasError && touched\n\n    return (\n        <Form.Item\n            help={submittedError || touchedError ? hasError : false}\n            validateStatus={submittedError || touchedError ? 'error' : ''}\n        >\n            {label && (\n                <label htmlFor={name} className={`${className}-label`}>\n                    {label}\n                </label>\n            )}\n            <DatePicker\n                allowClear={false}\n                id={name}\n                className={`${className}-input-field`}\n                defaultValue={valueFormat || moment()}\n                value={value || moment()}\n                format={`DD/MM/YYYY`}\n                onChange={(val) => setFieldValue(name, val)}\n                bordered={false}\n            />\n        </Form.Item>\n    )\n}\n\nexport default DateField\n","import { Form, Select, Tag } from 'antd'\nimport { randomColorAvatar } from '../../functions/global'\n\ntype SelectFieldProps = {\n    field: any\n    form: any\n\n    type: string\n    label: string\n    options: Array<any>\n    placeholder: string\n    disabled: boolean\n\n    className: string\n}\n\nconst { Option } = Select\n\nfunction SelectField(props: SelectFieldProps) {\n    const { field, form, options, label, disabled, className } = props\n\n    const { name } = field\n\n    const touched = form.touched[field.name]\n    const hasError = form.errors[field.name]\n\n    const submittedError = hasError\n    const touchedError = hasError && touched\n\n    const handleSelectedOptionChange = (selectedOption: any) => {\n        const changeEvent = {\n            target: {\n                name: name,\n                value: selectedOption,\n            },\n        }\n\n        field.onChange(changeEvent)\n    }\n\n    function tagRender(props: any) {\n        const { label, value, closable, onClose } = props\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={onClose}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Form.Item\n            help={submittedError || touchedError ? hasError : false}\n            validateStatus={submittedError || touchedError ? 'error' : ''}\n        >\n            {label && (\n                <label htmlFor={name} className={`${className}-label`}>\n                    {label}\n                </label>\n            )}\n            <Select\n                mode={'tags'}\n                id={name}\n                {...field}\n                bordered={false}\n                className={`${className}-input-field`}\n                defaultValue={[]}\n                onChange={handleSelectedOptionChange}\n                tagRender={tagRender}\n            >\n                {options.map((value) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.user.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Form.Item>\n    )\n}\n\nexport default SelectField\n","import { Col, Row } from 'antd'\nimport { FastField, Form } from 'formik'\nimport { useSelector } from 'react-redux'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport DateField from '../../../../custom-fields/DateField'\nimport InputField from '../../../../custom-fields/InputField'\nimport SelectField from '../../../../custom-fields/SelectField'\n\nimport { HandleForm } from '../../../../types/auth'\nimport { Project } from '../../../../types/global'\n\nconst content = CONTENT_PROJECT.formTask\n\nfunction FormTask(props: HandleForm) {\n    const project: Project = useSelector((state: any) => state.project)\n\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classProject.form}--field`}\n                label={content.fieldsName.label}\n            />\n            <Row>\n                <Col xs={12}>\n                    <FastField\n                        component={DateField}\n                        name={content.fieldsExpires.name}\n                        className={`${classProject.form}--field`}\n                        label={content.fieldsExpires.label}\n                    />\n                </Col>\n                <Col xs={12}>\n                    <FastField\n                        component={SelectField}\n                        name={content.fieldsUser.name}\n                        className={`${classProject.form}--field`}\n                        label={content.fieldsUser.label}\n                        options={project.members}\n                    />\n                </Col>\n            </Row>\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classProject.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormTask\n","import moment from 'moment'\n\nimport { DatePicker, Row } from 'antd'\n\nimport './DateTask.scss'\nimport { useEffect, useState } from 'react'\nimport { Task } from '../../../../../types/global'\n\ntype DateTaskProps = {\n    className?: string\n    name?: string\n    label?: string\n\n    task: Task\n    changeExpires: Function\n}\n\nfunction DateTask(props: DateTaskProps) {\n    const [valueInput, setValueInput] = useState<any>(moment(props.task.expires))\n\n    useEffect(() => {\n        setValueInput(props.task.expires)\n    }, [props.task])\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <DatePicker\n                allowClear={false}\n                className={`${props.className}--input`}\n                defaultValue={moment(props.task.expires)}\n                value={moment(valueInput)}\n                format={`DD/MM/YYYY`}\n                onChange={(val) => setValueInput(val)}\n                onBlur={() => props.changeExpires(valueInput, 'expires')}\n            />\n        </Row>\n    )\n}\n\nexport default DateTask\n","import { Col, Input, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { classProject } from '../../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../../constants/global'\nimport { Task } from '../../../../../types/global'\n\ntype IProps = {\n    className: string\n    icon: string\n    task: Task\n    changeName: Function\n}\nconst className = classProject.task\nconst content = CONTENT_PROJECT.tasks\n\nfunction HeaderTask(props: IProps) {\n    const [valueInput, setValueInput] = useState<string>(props.task.name)\n\n    useEffect(() => {\n        setValueInput(props.task.name)\n    }, [props.task])\n\n    return (\n        <Row justify=\"center\" align=\"middle\" className={`${props.className}`}>\n            <span className={`${props.className}--icon`}>\n                <props.icon />\n            </span>\n            <Input\n                name={props.task.name}\n                className={`${props.className}--input`}\n                defaultValue={props.task.name}\n                value={valueInput}\n                onChange={(e) => setValueInput(e.target.value)}\n                onBlur={() => props.changeName(valueInput, 'name')}\n                bordered={false}\n            />\n            <span className={`${props.className}--icon`}>\n                <content.iconDeleteTask />\n            </span>\n        </Row>\n    )\n}\n\nexport default HeaderTask\n","import { Row, Select, Tag } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../../api/projectsApi'\nimport { randomColorAvatar } from '../../../../../functions/global'\nimport { Task } from '../../../../../types/global'\n\ntype SelectTaskProps = {\n    className?: string\n    name?: string\n    label?: string\n\n    task: Task\n    changeAssignee: Function\n}\n\nconst { Option } = Select\n\nfunction SelectTask(props: SelectTaskProps) {\n    const params: any = useParams()\n\n    const [options, setOptions] = useState<any>([])\n    const [defaultValues, setDefaultValues] = useState<any>(props.task.assignee)\n\n    const getMembers = async (id: string) => {\n        try {\n            const response = await projectsApi.getMembers(id)\n            setOptions(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getMembers(params.id)\n        setDefaultValues(props.task.assignee)\n    }, [props.task])\n\n    function tagRender(props: any) {\n        const { label, value, closable, onClose } = props\n\n        return (\n            <Tag\n                color={randomColorAvatar(value)}\n                closable={closable}\n                onClose={onClose}\n                style={{ marginRight: 3 }}\n            >\n                {label}\n            </Tag>\n        )\n    }\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            {props.label && <label className={`${props.className}--label`}>{props.label}</label>}\n            <Select\n                mode={'tags'}\n                bordered={false}\n                className={`${props.className}--input`}\n                value={defaultValues}\n                onChange={(value) => setDefaultValues(value)}\n                onBlur={() => props.changeAssignee(defaultValues, 'assignee')}\n                tagRender={tagRender}\n            >\n                {options.map((value: any) => {\n                    return (\n                        <Option key={value._id} value={value._id}>\n                            {value.user.name}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </Row>\n    )\n}\n\nexport default SelectTask\n","import { FastField, Form } from 'formik'\nimport { classProject } from '../../../../constants/className'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport ButtonField from '../../../../custom-fields/BtnSubmit'\nimport InputField from '../../../../custom-fields/InputField'\n\nimport { HandleForm } from '../../../../types/auth'\n\nconst content = CONTENT_PROJECT.formSubTask\n\nfunction FormSubTask(props: HandleForm) {\n    return (\n        <Form onSubmit={props.handleSubmit}>\n            <FastField\n                component={InputField}\n                name={content.fieldsName.name}\n                type={content.fieldsName.type}\n                className={`${classProject.form}--field`}\n                label={content.fieldsName.label}\n            />\n\n            <ButtonField\n                content={content.btnSubmit}\n                type=\"submit\"\n                className={`${classProject.form}--btn`}\n            />\n        </Form>\n    )\n}\n\nexport default FormSubTask\n","import { Col, Row } from 'antd'\nimport { Formik } from 'formik'\nimport { useEffect, useState } from 'react'\nimport ModalCustom from '../../../../../components/ModalCustom'\nimport { CONTENT_PROJECT } from '../../../../../constants/global'\nimport { initialValuesFormProjectAddSubTask } from '../../../../../constants/initialValues'\nimport { validateFormProjectAddTask } from '../../../../../constants/validate'\n\nimport { Task } from '../../../../../types/global'\nimport FormSubTask from '../../FormSubTask'\n\ntype SubTaskProps = {\n    className?: string\n    icon: any\n    task: Task\n    handleSubmit: Function\n    handleChangeSubtask: Function\n}\n\nconst content = CONTENT_PROJECT.tasks.subtask\n\nfunction SubTask(props: SubTaskProps) {\n    const [contentModal, setContentModal] = useState<any>(<></>)\n    const [visible, setVisible] = useState<boolean>(false)\n\n    useEffect(() => {\n        const temp = (\n            <Formik\n                initialValues={initialValuesFormProjectAddSubTask}\n                validationSchema={validateFormProjectAddTask}\n                onSubmit={(valueForm) => {\n                    setVisible(false)\n                    props.handleSubmit(valueForm)\n                }}\n                render={FormSubTask}\n            />\n        )\n        setContentModal({ title: content.title, temp: temp })\n    }, [props.task, visible])\n\n    return (\n        <Row align=\"middle\" className={`${props.className}`}>\n            <Col xs={24}>\n                <Row>\n                    <button className={`${props.className}--btn`} onClick={() => setVisible(true)}>\n                        {content.btnAdd}\n                    </button>\n                </Row>\n                <span className={`${props.className}--title`}>{content.title}</span>\n                <Row>\n                    <Col xs={24} className={`${props.className}--list`}>\n                        {props.task.subtask_order?.map((value: any, index) => {\n                            return (\n                                <Row\n                                    key={`subtask-${index}`}\n                                    align=\"middle\"\n                                    justify=\"space-between\"\n                                    className={`${props.className}--item`}\n                                >\n                                    <div>\n                                        <props.icon /> <span>{value.name}</span>\n                                    </div>\n                                    {!value.complete && (\n                                        <div className={`${props.className}--icon`}>\n                                            <content.iconCheck\n                                                onClick={() =>\n                                                    props.handleChangeSubtask(value, 'complete')\n                                                }\n                                            />\n                                            <content.iconCancel\n                                                onClick={() =>\n                                                    props.handleChangeSubtask(value, 'delete')\n                                                }\n                                            />\n                                        </div>\n                                    )}\n                                </Row>\n                            )\n                        })}\n                    </Col>\n                </Row>\n            </Col>\n\n            <ModalCustom\n                loading={false}\n                contentModal={contentModal.temp}\n                visible={visible}\n                closeModal={(value: boolean) => {\n                    setVisible(value)\n                }}\n                title={contentModal.title}\n            />\n        </Row>\n    )\n}\n\nexport default SubTask\n","import { Input, Row } from 'antd'\nimport { useEffect, useState } from 'react'\nimport { Task } from '../../../../../types/global'\n\ntype IProps = {\n    className?: string\n    placeholder?: string\n    name?: string\n    value?: any\n    label?: string\n\n    task: Task\n    changeDescription: Function\n}\nconst { TextArea } = Input\n\nfunction TextAreaTask(props: IProps) {\n    const [valueInput, setValueInput] = useState<string>(props.task.name)\n\n    useEffect(() => {\n        setValueInput(props.task.name)\n    }, [props.task])\n\n    return (\n        <Row justify=\"center\" className={`${props.className}`}>\n            {props.label && (\n                <label htmlFor={props.name} className={`${props.className}--label`}>\n                    {props.label}\n                </label>\n            )}\n            <TextArea\n                rows={4}\n                name={props.task.name}\n                className={`${props.className}--area`}\n                defaultValue={props.task.name}\n                value={valueInput}\n                onChange={(e) => setValueInput(e.target.value)}\n                onBlur={() => props.changeDescription(valueInput, 'description')}\n                bordered={false}\n            />\n        </Row>\n    )\n}\n\nexport default TextAreaTask\n","import { Col, Row } from 'antd'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../../../api/projectsApi'\nimport { classProject } from '../../../../constants/className'\nimport { initialValuesFormProjectAddSubTask } from '../../../../constants/initialValues'\nimport { openNotificationWithIcon } from '../../../../functions/global'\nimport { Task } from '../../../../types/global'\nimport DateTask from './DateTask'\nimport HeaderTask from './Header'\nimport SelectTask from './SelectTask'\nimport SubTask from './SubTask'\nimport TextAreaTask from './TextAreaTask'\n\ntype IProps = {\n    task: Task\n    icon: string\n\n    changeTask: Function\n    memberProject: Array<any>\n}\n\nconst className = classProject.task\n\nfunction TaskDetail(props: IProps) {\n    const params: any = useParams()\n    const [task, setTask] = useState<Task>(props.task)\n\n    const getTask = async (pid: string, id: string) => {\n        try {\n            const response: Task = await projectsApi.getTasksDetail(pid, id)\n            setTask(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const patchTask = async (pid: string, id: string, data: Task) => {\n        try {\n            const response: Task = await projectsApi.patchTasks(pid, id, data)\n            if (response) {\n                props.changeTask()\n                getTask(pid, id)\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const patchSubTask = async (pid: string, id: string, status: string) => {\n        try {\n            if (status === 'complete') {\n                const response: Task = await projectsApi.patchTasksComplete(pid, id)\n                openNotificationWithIcon('success', 'Task complete!', '')\n            } else {\n                const response = await projectsApi.deleteTasks(pid, id)\n                openNotificationWithIcon('success', 'Delete Task successfully!', '')\n            }\n            props.changeTask()\n            getTask(pid, task._id || '')\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postSubTask = async (pid: string, id: string, data: Task) => {\n        try {\n            const response: Task = await projectsApi.postSubtasks(pid, id, data)\n\n            if (response) {\n                props.changeTask()\n                getTask(pid, id)\n                openNotificationWithIcon('success', 'Create Subtask successfully!', '')\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postAssignee = async (pid: string, id: string, data: { member: string }) => {\n        try {\n            const response: Task = await projectsApi.postAssigneeTasks(pid, id, data)\n            if (response) {\n                props.changeTask()\n                getTask(pid, id)\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const deleteAssignee = async (pid: string, id: string, uid: string) => {\n        try {\n            const response = await projectsApi.deleteAssigneeTasks(pid, id, uid)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n    const change = (value: any, field: any) => {\n        const id = props.task._id || ''\n\n        if (value) {\n            let data: any = {}\n            switch (field) {\n                case 'name':\n                    data.name = value\n                    break\n                case 'assignee':\n                    if (value.length > 0) {\n                        for (const assigneeId of task.assignee || []) {\n                            deleteAssignee(params.id, id, assigneeId)\n                        }\n\n                        for (const assignee of value) {\n                            postAssignee(params.id, id, { member: assignee })\n                        }\n                    }\n                    data.assignee = value\n                    break\n                case 'expires':\n                    data.expires = Number(moment(value).utc().format('x'))\n                    break\n                default:\n                    break\n            }\n\n            patchTask(params.id, id, data)\n        }\n    }\n\n    const handleSubTask = (value: Task) => {\n        const id = props.task._id || ''\n        postSubTask(params.id, id, value)\n    }\n\n    const handleChangeSubtask = (value: any, status: string) => {\n        patchSubTask(params.id, value._id, status)\n    }\n\n    useEffect(() => {\n        setTask(props.task)\n    }, [props.task])\n\n    return (\n        <Row>\n            <Col xs={24}>\n                <HeaderTask\n                    className={`${className}-header`}\n                    icon={props.icon}\n                    task={task}\n                    changeName={change}\n                />\n                <SelectTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Assignee'}\n                    changeAssignee={change}\n                />\n                <DateTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Due date'}\n                    name={'expires'}\n                    changeExpires={change}\n                />\n\n                <TextAreaTask\n                    className={`${className}-field`}\n                    task={task}\n                    label={'Description'}\n                    name={'expires'}\n                    changeDescription={(value: any) => console.log(value)}\n                />\n\n                <SubTask\n                    className={`${className}-subtask`}\n                    task={task}\n                    icon={props.icon}\n                    handleSubmit={handleSubTask}\n                    handleChangeSubtask={handleChangeSubtask}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default TaskDetail\n","import { Col, Row } from 'antd'\nimport moment from 'moment'\nimport { CONTENT_PROJECT } from '../../../../constants/global'\nimport { Task } from '../../../../types/global'\n\ntype IProps = {\n    className: string\n    title: string\n    actionDropdown: Function\n    filter?: string\n    icon: any\n\n    tasks: Array<Task>\n    handleTask: Function\n}\n\nconst content = CONTENT_PROJECT.tasks\n\nfunction Tasks(props: IProps) {\n    return (\n        <div className={`${props.className}`}>\n            <Row justify=\"center\">\n                <Col xs={24}>\n                    <Row className={`${props.className}--title`}>\n                        <span>{props.title}</span>\n                    </Row>\n                    <Row className={`${props.className}--tasks`}>\n                        <Col xs={24}>\n                            {props.tasks.length > 0 &&\n                                props.tasks.map((value, index) => {\n                                    if (value.status === props.filter)\n                                        return (\n                                            <Row\n                                                key={`task-${index}`}\n                                                className={`${props.className}--task`}\n                                                onClick={() => props.handleTask(value, props.icon)}\n                                            >\n                                                <Col xs={24}>\n                                                    <Row justify=\"space-between\" align=\"middle\">\n                                                        <Col\n                                                            xs={20}\n                                                            className={`${props.className}--task-name`}\n                                                        >\n                                                            <props.icon /> <span>{value.name}</span>\n                                                        </Col>\n                                                        <span\n                                                            className={`${props.className}--task-icon`}\n                                                        >\n                                                            <content.iconMenuTask />\n                                                        </span>\n                                                    </Row>\n                                                    <Row justify=\"space-between\">\n                                                        <span\n                                                            className={`${props.className}--task-time`}\n                                                        >\n                                                            <content.iconDeadline />{' '}\n                                                            {moment(value.expires).format(\n                                                                'DD/MM/YYYY'\n                                                            )}\n                                                        </span>\n                                                    </Row>\n                                                </Col>\n                                            </Row>\n                                        )\n                                })}\n\n                            <Row className={`${props.className}--btn`}>\n                                <Col xs={24}>\n                                    <Row\n                                        align=\"middle\"\n                                        onClick={() => props.actionDropdown('add-task')}\n                                    >\n                                        <span className={`${props.className}--btn-icon`}>\n                                            <content.iconBtnAdd />\n                                        </span>\n                                        <span className={`${props.className}--btn-text`}>\n                                            {content.textBtnAdd}\n                                        </span>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Tasks\n","import { Col, Row } from 'antd'\nimport { Formik } from 'formik'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport projectsApi from '../../api/projectsApi'\nimport { add } from '../../app/projectSlice'\nimport DrawerCustom from '../../components/DrawerCustom'\nimport Header from '../../components/Header'\nimport ModalCustom from '../../components/ModalCustom'\nimport { classLayout, classProject } from '../../constants/className'\nimport { CONTENT_PROJECT } from '../../constants/global'\nimport { initialValuesFormProjectAddTask } from '../../constants/initialValues'\nimport { validateFormProjectAddTask } from '../../constants/validate'\nimport { openNotificationWithIcon } from '../../functions/global'\nimport { Project, Task } from '../../types/global'\nimport FormMember from './components/FormMember'\nimport FormRoles from './components/FormRoles'\nimport FormTask from './components/FormTask'\nimport TaskDetail from './components/TaskDetail'\nimport Tasks from './components/Tasks'\n\nimport './Project.scss'\n\ntype IProps = {\n    className: string\n}\n\nconst content = CONTENT_PROJECT\nconst className = classProject.project\n\nfunction ProjectPage(props: IProps) {\n    const params: any = useParams()\n    const dispatch = useDispatch()\n\n    const [visible, setVisible] = useState<boolean>(false)\n    const [visibleDrawer, setVisibleDrawer] = useState<boolean>(false)\n    const [contentModal, setContentModal] = useState<any>(<></>)\n    const [contentDrawer, setContentDrawer] = useState<any>(<></>)\n\n    const projects: Array<Project> = useSelector((state: any) => state.projects)\n    const project: Project = useSelector((state: any) => state.project)\n\n    const [tasks, setTasks] = useState<Array<Task>>([])\n\n    const getProject = async (pid: string) => {\n        try {\n            const response = await projectsApi.getProjectsDetail(pid)\n            dispatch(add(response))\n            getTasks(pid)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const getTasks = async (pid: string) => {\n        try {\n            const response: Array<Task> = await projectsApi.getTasks(pid)\n            setTasks(response)\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const postTask = async (pid: string, data: Task) => {\n        try {\n            const formData = {\n                name: data.name,\n            }\n            const response_post: Task = await projectsApi.postTasks(pid, formData)\n            const idTask = response_post._id || ''\n\n            if (data.assignee && response_post) {\n                for (const value of data.assignee) {\n                    const response_assignee: Task = await projectsApi.postAssigneeTasks(\n                        pid,\n                        idTask,\n                        { member: value }\n                    )\n                }\n\n                delete data.assignee\n            }\n\n            if (data && response_post) {\n                data.expires = Number(moment(data.expires).utc().format('x'))\n\n                const response_patch: Task = await projectsApi.patchTasks(pid, idTask, data)\n\n                if (response_patch) {\n                    setVisible(false)\n                    getProject(pid)\n                    openNotificationWithIcon('success', 'Create Task successfully!', '')\n                }\n            }\n        } catch (error: any) {\n            console.log(error)\n        }\n    }\n\n    const handleSubmit = (value: any, action: string, filter?: string) => {\n        switch (action) {\n            case 'add-task':\n                postTask(project._id, { ...value, status: filter })\n                break\n\n            default:\n                break\n        }\n    }\n\n    const handleActionDropdown = (value: any, filter?: string) => {\n        let temp = <></>\n        let title = ''\n\n        setVisible(true)\n\n        switch (value) {\n            case 'add-task':\n                temp = (\n                    <Formik\n                        initialValues={initialValuesFormProjectAddTask}\n                        validationSchema={validateFormProjectAddTask}\n                        onSubmit={(valueForm) => handleSubmit(valueForm, value, filter)}\n                        render={FormTask}\n                    />\n                )\n                title = 'Add Task'\n                break\n            case 'add-member':\n                temp = <FormMember />\n                title = 'Members'\n\n                break\n            case 'add-roles':\n                temp = <FormRoles />\n                title = 'Roles'\n\n                break\n            default:\n                break\n        }\n\n        setContentModal({ temp: temp, title: title })\n    }\n\n    const handleTask = (value: Task, icon: string) => {\n        setVisibleDrawer(true)\n        setContentDrawer(\n            <TaskDetail\n                task={value}\n                icon={icon}\n                changeTask={() => {\n                    getTasks(params.id)\n                }}\n                memberProject={project.members}\n            />\n        )\n    }\n\n    useEffect(() => {\n        if (projects && projects.length > 0) {\n            projects.forEach((value) => {\n                if (value._id === params.id) {\n                    getTasks(value._id)\n                    dispatch(add(value))\n                }\n            })\n        } else {\n            getProject(params.id)\n        }\n    }, [params])\n\n    useEffect(() => {\n        if (!visible) setContentModal({ temp: <></>, title: '' })\n    }, [visible])\n\n    return (\n        <Row className={`${props.className} ${className}`}>\n            <Col xs={24}>\n                <Header\n                    className={classLayout.header}\n                    dropdown={project.name}\n                    actionDropdown={handleActionDropdown}\n                />\n                <div className={`${className}__list`}>\n                    <div className={`${className}__list--scroll`}>\n                        {content.tasks.filter.map((value, index) => {\n                            return (\n                                <Tasks\n                                    key={`tasks-${index}`}\n                                    actionDropdown={(valueTask: any) =>\n                                        handleActionDropdown(valueTask, value.value)\n                                    }\n                                    className={`${className}__list-tasks`}\n                                    title={value.title}\n                                    tasks={tasks}\n                                    filter={value.value}\n                                    icon={value.icon}\n                                    handleTask={handleTask}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n                <ModalCustom\n                    loading={false}\n                    contentModal={contentModal.temp}\n                    visible={visible}\n                    closeModal={(value: boolean) => {\n                        setVisible(value)\n                    }}\n                    title={contentModal.title}\n                />\n\n                <DrawerCustom\n                    visible={visibleDrawer}\n                    closeModal={() => setVisibleDrawer(false)}\n                    contentDrawer={contentDrawer}\n                />\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProjectPage\n"],"names":["userApi","getUser","mail","url","axiosClient","getUserDetail","_id","postUser","data","patchUser","deleteUser","menu","target","rel","href","props","name","user","align","overlay","placement","arrow","className","PlusOutlined","style","backgroundColor","randomColorAvatar","slice","indexOf","content","CONTENT_COMPONENT","classComponent","useSelector","state","dispatch","useDispatch","menuDropdown","onClick","value","actionDropdown","key","map","icon","text","response","setUser","console","log","useEffect","undefined","justify","dropdown","DownOutlined","title","navigate","length","index","to","path","isActive","Search","onSearch","User","visible","onOk","closeModal","onCancel","footer","width","spinning","loading","contentModal","useState","setValue","SearchOutlined","type","placeholder","onChange","e","onKeyPress","onBlur","onClose","getContainer","closable","contentDrawer","CONTENT_PROJECT","classProject","project","userSearch","setUserSearch","findUser","openNotificationWithIcon","postMember","pid","projectsApi","addMember","xs","shape","size","borderRadius","email","handleAddMember","btnSubmit","members","btnDelete","label","htmlFor","bordered","roles","permission","color","default","handleDelete","Option","Select","mode","val","tagRender","marginRight","options","params","useParams","dataAddRole","setDataAddRole","setRoles","getRoles","id","postRoles","deleteRoles","optionsPermission","iconDeleteRole","field","form","setFieldValue","valueFormat","moment","touched","hasError","errors","submittedError","touchedError","help","validateStatus","allowClear","defaultValue","format","disabled","selectedOption","changeEvent","onSubmit","handleSubmit","component","InputField","fieldsName","DateField","fieldsExpires","SelectField","fieldsUser","task","expires","valueInput","setValueInput","changeExpires","changeName","iconDeleteTask","setOptions","assignee","defaultValues","setDefaultValues","getMembers","changeAssignee","setContentModal","setVisible","temp","initialValues","initialValuesFormProjectAddSubTask","validationSchema","validateFormProjectAddTask","valueForm","render","FormSubTask","btnAdd","subtask_order","complete","iconCheck","handleChangeSubtask","iconCancel","ModalCustom","TextArea","Input","rows","changeDescription","setTask","getTask","patchTask","changeTask","patchSubTask","status","postSubTask","postAssignee","deleteAssignee","uid","change","assigneeId","member","Number","utc","tasks","filter","handleTask","iconMenuTask","iconDeadline","iconBtnAdd","textBtnAdd","visibleDrawer","setVisibleDrawer","setContentDrawer","projects","setTasks","getProject","add","getTasks","postTask","formData","response_post","idTask","handleActionDropdown","initialValuesFormProjectAddTask","action","FormTask","memberProject","forEach","Header","classLayout","valueTask"],"sourceRoot":""}